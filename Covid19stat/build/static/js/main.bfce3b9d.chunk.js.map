{"version":3,"sources":["serviceWorker.js","Components/NavBar.js","Components/Footer.js","Components/Loader.js","Components/Case.js","Components/CaseBar.js","Components/TableRow.js","Components/Graph.js","Components/Table.js","Components/Failed.js","Route/Home.js","Route/Country.js","index.js","Img/covid19.jpg"],"names":["Boolean","window","location","hostname","match","Navbar","className","src","Logo","alt","Footer","props","href","Loader","Case","useState","showChart","setShowChart","showGraphUI","bg","color","button","chart","style","backgroundColor","number","type","onClick","class","CaseBar","TotalConfirmed","data","TotalRecovered","TotalDeaths","TotalActive","NewConfirmed","NewRecovered","NewDeaths","TableRow","active","table","activeNew","link","to","options","maxLength","Table","state","sortByConfirmed","sortByRecoverd","sortByDeaths","sortByActive","sortByDailyConfirmed","sortByDailyRecovered","sortByDailyDeaths","sortByDailyActive","sortByCountry","mydata","i","length","totalActive","newActive","Country","Slug","sort","a","b","map","property","dataHandler","this","React","Component","chop","postion","maxData","data1","data2","start","console","log","Graph","close","position","max","bind","handleEvent","setState","event","target","value","name","parseInt","plotData","chartData","labels","datasets","label","borderColor","borderWidth","title","display","text","fontSize","legend","graphHandler","min","step","onChange","Failed","countries","global","count","output","Home","isLoading","failed","axios","get","then","response","Global","Countries","catch","error","uri","pathname","confirmed","recovered","deaths","Confirmed","Recovered","Deaths","Active","home","ReactDOM","render","StrictMode","path","exact","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.bfce3b9d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\r\nimport Logo from '../Img/covid19.jpg'\r\n\r\nfunction Navbar(){\r\n\r\n    return(\r\n        <div className=\"navbar\">\r\n            <img src={Logo} className=\"navbar-logo\" alt=\"logo\"/>\r\n             Covid19 Stat </div>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React from 'react'\r\n\r\nfunction Footer(props){\r\n\r\n    return(\r\n        <div className=\"footer\">\r\n            <a className=\"socials\" href=\"https://www.twitter.com/evuetaphajoshua\">\r\n                Twitter\r\n            </a>\r\n            <br/>\r\n            <a  className=\"socials\" href=\"https://www.github.com/joshuajee\">\r\n                Github\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\nimport \"../Styles/Loader.css\"\r\n\r\n\r\nfunction Loader(){\r\n\r\n    return(<div className=\"loader-wrapper\">\r\n                <div className=\"loader\">\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Loader\r\n\r\n\r\n","import React ,{useState} from 'react'\r\nimport GraphUI from './GraphUI'\r\n\r\n\r\nfunction Case(props){\r\n    let show = false\r\n\r\n    const [showChart, setShowChart] = useState(false);\r\n\r\n    function showGraphUI() {\r\n        setShowChart(true)\r\n    }\r\n    \r\n    \r\n\r\n    let bg = props.color\r\n    let chart = props.chart\r\n\r\n    let button = \"hide\"\r\n    if(chart)\r\n        button = \"show  chart-btn\"\r\n\r\n    if(show === true){\r\n        \r\n        return(\r\n            <div className=\"case\" style = {{backgroundColor: bg}} > \r\n    \r\n                <div>\r\n                    {props.number}\r\n                </div>\r\n    \r\n                <div>\r\n                    {props.type}\r\n                </div>\r\n               <button onClick={showGraphUI} class={button}> View Chart </button>\r\n                <GraphUI show={true} />\r\n            </div>\r\n        )\r\n    }else\r\n    return(\r\n        <div className=\"case\" style = {{backgroundColor: bg}} > \r\n\r\n            <div>\r\n                {props.number}\r\n            </div>\r\n\r\n            <div>\r\n                {props.type}\r\n            </div>\r\n            {showChart}\r\n           <button onClick={showGraphUI} class={button}> View Chart  </button>\r\n\r\n        </div>\r\n      \r\n    )\r\n} \r\n\r\n\r\n\r\n\r\n\r\nexport default Case","import React from 'react'\r\nimport Case from './Case'\r\n\r\nfunction CaseBar(props){\r\n\r\n    let TotalConfirmed = props.data.TotalConfirmed;\r\n    let TotalRecovered = props.data.TotalRecovered;\r\n    let TotalDeaths = props.data.TotalDeaths;\r\n    let TotalActive = TotalConfirmed - TotalRecovered - TotalDeaths;\r\n\r\n    let NewConfirmed = props.data.NewConfirmed;\r\n    let NewRecovered = props.data.NewRecovered;\r\n    let NewDeaths = props.data.NewDeaths;\r\n\r\n    return(\r\n        <div className=\"caseBar\">\r\n            <Case number ={TotalConfirmed} type = \"Total Confirmed Case\" color =\"#000000\" chart={true} />\r\n            <Case number ={TotalRecovered} type = \"Total Recovered Case\" color =\"#12f432\" chart={true} />\r\n            <Case number ={TotalActive} type = \"Total Active Case\" color =\"#701722\" chart={true} />\r\n            <Case number ={TotalDeaths} type = \"Total Death Case\" color =\"#ff0000\" chart={true} />\r\n            <Case number ={NewConfirmed} type = \"Daily Confirmed Case\" color =\"#000000\"/>\r\n            <Case number ={NewRecovered} type = \"Daily Recovered Case\" color =\"#12f432\"/>\r\n            <Case number ={NewDeaths} type = \"Daily Death Case\" color =\"#ff0000\"/>\r\n        </div>\r\n        )\r\n}\r\n\r\n\r\nexport default CaseBar","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction TableRow(props){\r\n    \r\n    let active = props.table[1][1] - props.table[1][2] - props.table[1][3];\r\n    let activeNew = props.table[1][5] - props.table[1][6] - props.table[1][7];\r\n    let link = \"/country/\" + props.table[1][9]\r\n\r\n\r\n    return( \r\n        <tr> \r\n            <td><Link to={link}>{props.table[0]}</Link></td>\r\n            <td><Link to={link}>{props.table[1][0]} </Link></td>\r\n            <td><Link to={link}>{props.table[1][1]} </Link></td>\r\n            <td><Link to={link}>{props.table[1][2]} </Link></td>\r\n            <td><Link to={link}>{active} </Link></td>\r\n            <td><Link to={link}>{props.table[1][3]} </Link></td>\r\n            <td><Link to={link}>{props.table[1][5]} </Link></td>\r\n            <td><Link to={link}>{props.table[1][6]} </Link></td>\r\n            <td><Link to={link}>{activeNew} </Link></td>\r\n            <td><Link to={link}>{props.table[1][7]} </Link></td>\r\n        </tr>\r\n\r\n            )\r\n}\r\n\r\nexport default TableRow\r\n\r\n/*\r\n\r\n \r\n*/","import React from 'react'\r\nimport {Bar} from 'react-chartjs-2'\r\n\r\n\r\n//Variables\r\nvar options;\r\nvar data;\r\nvar maxLength;\r\n\r\n\r\nfunction graphHandler(type, plotData, position, maxData = 20){\r\n    \r\n    plotData.sort(function(a, b){\r\n        return  b[1] - a[1]\r\n    })\r\n\r\n\r\n    var chartData = chop(plotData, position, maxData)\r\n\r\n    \r\n    data = {\r\n        labels : chartData[0],\r\n        datasets: [{\r\n            label: \"Country\",\r\n            backgroundColor: 'rgba(75, 192, 192, 1)',\r\n            borderColor: 'rgba(0, 0, 0, 1)',\r\n            borderWidth: 2,\r\n            data: chartData[1]\r\n        }]\r\n    }\r\n\r\n    let start = position - maxData\r\n\r\n    options = {\r\n        title:{\r\n            display:true,\r\n            text: \"Showing Top \" + start + \" to \" + position + \" Daily \"+ type +\" case by Country \",\r\n            fontSize:15\r\n        },\r\n        legend:{\r\n            display:false,\r\n            position: \"top\"\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nfunction chop(data, postion, maxData){\r\n    let data1 = []\r\n    let data2 = []\r\n    let start  = postion - maxData\r\n    console.log(postion)\r\n    maxLength = data.length\r\n\r\n    for(let i = 0; i < maxData; i++){\r\n        data1[i] = data[i + start][0]\r\n        data2[i] = data[i + start][1]\r\n    }\r\n\r\n    return [data1, data2]\r\n}\r\n\r\n\r\n\r\nclass Graph extends React.Component{\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            close : \"show\",\r\n            position : 20,\r\n            max: maxLength\r\n        }\r\n\r\n        \r\n        //Binds the events\r\n        this.close = this.close.bind(this)\r\n        this.handleEvent = this.handleEvent.bind(this)\r\n    }\r\n\r\n    close() {\r\n        this.setState({ close : \"hide\" })\r\n    }\r\n\r\n    //method for scrolling the chart\r\n    handleEvent(event){\r\n\r\n        const {name, value} = event.target\r\n\r\n        this.setState({\r\n                position : parseInt(value)\r\n    \r\n        })\r\n    }\r\n    \r\n    render(){\r\n        graphHandler(this.props.type, this.props.data, this.state.position)\r\n        return(\r\n            <div className=\"Graph\">\r\n                <div>\r\n                    <Bar\r\n                        data={data}\r\n                        options={options}\r\n                        />\r\n                \r\n                </div>\r\n                <input \r\n                    type=\"range\" min={20} \r\n                    max={maxLength} \r\n                    value={this.state.position} \r\n                    step={1} \r\n                    onChange={this.handleEvent} />\r\n            </div>\r\n            )\r\n     \r\n    }\r\n\r\n}\r\n\r\nexport default Graph","import React from 'react'\r\nimport TableRow from './TableRow'\r\n\r\n\r\n//function to handle json data\r\nfunction dataHandler(mydata){\r\n\r\n    var data = []\r\n    for (let i = 0; i < mydata.length; i++) {\r\n        let totalActive = mydata[i].TotalConfirmed - mydata[i].TotalRecovered - mydata[i].TotalDeaths\r\n        let newActive = mydata[i].TotalConfirmed - mydata[i].TotalRecovered - mydata[i].TotalDeaths\r\n        \r\n        data[i] = [mydata[i].Country, mydata[i].TotalConfirmed, \r\n                    mydata[i].TotalRecovered, mydata[i].TotalDeaths, \r\n                    totalActive, mydata[i].NewConfirmed, \r\n                    mydata[i].NewRecovered, mydata[i].NewDeaths, newActive, mydata[i].Slug] \r\n                \r\n        }\r\n\r\n      \r\n        data.sort(function(a, b){\r\n            return  b[1] - a[1]\r\n        })\r\n\r\n\r\n        for (let i = 0; i < data.length; i++) {\r\n\r\n            data[i] = [i + 1, data[i]]\r\n                    \r\n        }\r\n\r\n        return data.map(property => <TableRow table={property} />)\r\n}\r\n\r\nclass Table extends React.Component{\r\n\r\n    constructor(){\r\n\r\n        super()\r\n\r\n        this.state = {\r\n            sortByConfirmed:true,\r\n            sortByRecoverd:false,\r\n            sortByDeaths:false,\r\n            sortByActive:false,\r\n            sortByDailyConfirmed:false,\r\n            sortByDailyRecovered:false,\r\n            sortByDailyDeaths:false,\r\n            sortByDailyActive:false,\r\n            sortByCountry:false\r\n        }\r\n\r\n    }\r\n\r\n\r\n \r\n    render(){\r\n    \r\n        return(\r\n            <div className=\"tableWrapper\">\r\n\r\n                <table className=\"table\"> \r\n\r\n                    <thead>\r\n\r\n                        <tr>\r\n                            <th>S/N</th>\r\n                            <th>Country</th>\r\n                            <th>Confirmed Case</th>\r\n                            <th>Recovered Case</th>\r\n                            <th>Active Case</th>\r\n                            <th>Total Deaths</th>\r\n                            <th>Daily Confirmed Case</th>\r\n                            <th>Daily Recovered Case</th>\r\n                            <th>Daily Rise in Cases </th>\r\n                            <th>Daily Death Case</th>\r\n                        </tr>\r\n\r\n                    </thead>\r\n                    \r\n                    <tbody>\r\n                        {dataHandler(this.props.data)}\r\n                    </tbody>\r\n\r\n                </table>\r\n\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Table","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Navbar from './NavBar'\r\n\r\nfunction Failed(props){\r\n\r\n    return(\r\n        <div className=\"failed\">\r\n            <center>\r\n                <div className=\"failed-msg\">\r\n                    Failed To Retrieve data please reload.\r\n                    <Link to={\"/\"}> reload </Link>\r\n                </div>\r\n                \r\n            </center>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Failed","import React from 'react'\r\nimport axios from 'axios'\r\n\r\nimport '../Styles/Loader.css'\r\n\r\nimport CaseBar from '../Components/CaseBar'\r\nimport Table from '../Components/Table'\r\nimport Graph from '../Components/Graph'\r\n//import GraphUI from '../Components/GraphUI';\r\nimport Loader from '../Components/Loader'\r\nimport Failed from '../Components/Failed'\r\nimport Navbar from '../Components/NavBar'\r\nimport Footer from '../Components/Footer'\r\n\r\n\r\nvar countries = []\r\nvar global = []\r\n\r\nclass Home extends React.Component{\r\n\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            isLoading : true,\r\n            failed : false\r\n        }\r\n\r\n       \r\n    }\r\n    \r\n\r\n     //sends an api request when the components mount\r\n     componentDidMount(){\r\n\r\n        let uri = \"/api/home\"\r\n\r\n        axios.get(uri).then(({data}) =>{\r\n            \r\n            global = data.response.Global\r\n            countries = data.response.Countries\r\n\r\n            this.setState({\r\n                isLoading : false\r\n            })\r\n\r\n        }).catch(error => {\r\n\r\n            this.setState({\r\n                isLoading : false,\r\n                failed : true\r\n\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n   \r\n    render(){\r\n        if(this.state.isLoading)\r\n            return(<Loader />)\r\n        if(this.state.failed)\r\n            return(<Failed />)\r\n        return(<div>\r\n                    <Navbar />\r\n                    <div className=\"container\">\r\n                        <div className=\"stat-bar\">World Info</div>\r\n                        <CaseBar data={global} />\r\n                        \r\n                        <div className=\"Graph-Wrapper\">\r\n                            <Graph data={data(\"Confirmed\")} type={\"Confirmed\"}/>\r\n                            <Graph data={data(\"Deaths\")} type={\"Deaths\"}/>\r\n                            <Graph data={data(\"Recovered\")} type={\"Recovered\"}/>\r\n                            <Graph data={data(\"Active\")} type={\"Active\"}/>\r\n                        </div>\r\n\r\n                        <Table data={countries} />\r\n                        \r\n                    </div>\r\n                    <Footer />\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\n//\r\n\r\n\r\nfunction data(type){\r\n    let count = 0\r\n    let output = []\r\n    for(let i = 0; i < countries.length; i++){\r\n        switch(type){\r\n            case \"Confirmed\":\r\n                output[count] = [countries[i].Country, countries[i].NewConfirmed]\r\n            break\r\n            case \"Deaths\":\r\n                output[count] = [countries[i].Country, countries[i].NewDeaths]\r\n            break\r\n            case \"Recovered\":\r\n                output[count] = [countries[i].Country, countries[i].NewRecovered]\r\n            break\r\n            case \"Active\":\r\n                output[count] = [countries[i].Country, countries[i].NewConfirmed - countries[i].NewDeaths - countries[i].NewRecovered]\r\n            break\r\n            default:\r\n                break\r\n        }\r\n        \r\n        count++\r\n    }\r\n    return output\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport axios from 'axios'\r\n//import CountryCaseBar from '../Components/CountryCaseBar'\r\nimport Loader from '../Components/Loader'\r\n//import GraphLine from '../Components/GraphLine'\r\n\r\n\r\n\r\nvar country = 0\r\n\r\nclass Country extends React.Component{\r\n\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            isLoading : false\r\n        }\r\n\r\n    }\r\n   \r\n    \r\n\r\n    //sends an api request when the components mount\r\n    componentDidMount(){\r\n\r\n        let uri = \"/api\" + window.location.pathname\r\n        axios.get(uri).then(({data}) =>{\r\n   \r\n            let confirmed = []\r\n            let recovered = []\r\n            let deaths = []\r\n            let active = []\r\n\r\n            for(let i = 0; i < data.length; i++){\r\n                confirmed[i] = data[i].Confirmed\r\n                recovered[i] = data[i].Recovered\r\n                deaths[i] = data[i].Deaths\r\n                active[i] = data[i].Active\r\n            }\r\n            console.log(active)\r\n            this.setState({\r\n                isLoading : false\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        if(this.state.isLoading)\r\n            return(<Loader />)\r\n        return(\r\n            <div className=\"container\">\r\n                \r\n                <div className=\"Graph-Wrapper\">\r\n\r\n                   \r\n                                \r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n/*\r\n<GraphLine type=\"Confirmed\"/>\r\n<GraphLine type=\"Recovered\"/>\r\n<GraphLine type=\"Active\"/>\r\n<GraphLine type=\"Death\"/>*/\r\n            //<CountryCaseBar />\r\nexport default Country","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter, Route} from 'react-router-dom'\r\nimport './index.css';\r\nimport './Styles/Styles.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport NavBar from './Components/NavBar'\r\nimport Footer from './Components/Footer'\r\nimport Home from './Route/Home'\r\nimport Country from './Route/Country'\r\n\r\n\r\n   \r\n\r\nconst home = () => <Home />\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n        <Route path=\"/\" exact={true} component={home} />\r\n        <Route path=\"/world\" exact={true} component={home} />\r\n        <Route path=\"/country\"  component={Country} />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/covid19.e724fcb8.jpg\";"],"sourceRoot":""}